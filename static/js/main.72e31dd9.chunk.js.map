{"version":3,"sources":["pages/Login/styles.js","services/api.js","pages/Login/index.js","pages/Cadastro/styles.js","pages/Cadastro/index.js","pages/Chat/styles.js","components/ContactsBar/styles.js","components/Contact/styles.js","components/Contact/index.js","components/ContactsBar/index.js","components/ChatRoom/styles.js","components/ChatRoom/index.js","components/AddContactView/styles.js","components/AddContactView/index.js","pages/Chat/index.js","index.js","routes.js","assets/images/logo.svg","assets/icons/add_contact.svg","assets/icons/logout.svg","assets/icons/accept.svg","assets/icons/send.svg","assets/icons/add_contact_blue.svg","assets/icons/plus .svg"],"names":["Container","styled","div","Campo","Content","api","axios","create","baseURL","Alert","props","elevation","variant","Login","history","useState","username","setUsername","passwd","setPasswd","alertOpen","setAlertOpen","loading","setLoading","erroMenssage","setErroMenssage","useEffect","localStorage","getItem","push","onSingin","a","post","api_response","data","status","response","setItem","handleCloseAlert","event","reason","src","logo","alt","id","placeholder","onChange","text","target","value","htmlFor","type","onClick","height","color","href","Snackbar","open","autoHideDuration","onClose","severity","Cadastro","repeatPasswd","setRepeatPasswd","onSingup","UserRequest","Contact","profile_pic","className","ContactsBar","onChangeChat","onAddContact","userData","showAlert","onAcceptRequest","token","get","headers","authorization","response_api","avatar","friends","map","item","key","friendsRequestRecived","length","add_icon","accept_icon","removeItem","logout","ChatRoom","chat","name","setName","setAvatar","setStatus","chatContent","setChatContent","menssage","setMenssage","scrollRef","setScrollRef","registertoSocket","io","query","on","newMenssage","scrollTop","scrollHeight","getProfile","getChat","onSendMenssage","content","receiverId","ref","el","index","receiver","sender","onKeyDown","send","AddContactView","onCloseModal","show","onClickReady","add_contact","plus_icon","Chat","currentChat","setCurrentChat","addContact","setAddContact","setUserData","alertMenssage","setAlertMenssage","alertType","setAlertType","getInfo","cod","ReactDOM","render","basename","path","component","exact","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.72e31dd9.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100vh;\n    background-image: linear-gradient(to right, #449DD1 , #8EC4E3);\n    display: flex;\n    overflow-y: hidden;\n`;\nexport const Campo = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 80%;\n    position: relative;\n    margin: 10px auto;\n    margin-bottom: 30px;\n    input{\n        \n        height: 50px;\n        padding-left: 10px;\n        border-radius: 5px;\n        border: 2px solid #D9D9D9;\n        font-size: 16px;\n        color:#1f1f1f;\n        \n    }\n    input:focus{\n        outline: none;\n        border: 2px solid #449DD1;\n\n    }\n    label{\n        font-size: 18px;\n        position: absolute;\n        top: 14px;\n        left: 10px;\n        color: #D9D9D9;\n        transition: .5s ease;\n    }\n    \n    input:not(:placeholder-shown) + label{\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        transform-origin: left bottom;\n        transform: translate(0,-0.8rem);\n        font-size: 0.8em;\n        color: #D9D9D9;\n    }\n    input:focus + label, \n    input:active + label{\n\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        transform-origin: left bottom;\n        transform: translate(0,-0.8rem);\n        font-size: 0.8em;\n        color: #449DD1;\n    }\n    \n    \n`;\n\nexport const Content = styled.div`\n    \n    max-width: 700px;\n    width: 40%;\n    min-width: 350px;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: #fff;\n    box-shadow: 4px 4px 10px rgba(255,255,255,0.25);\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    form{\n        display: flex;\n        flex-direction: column;\n        button{\n            border: none;\n            background: #449DD1;\n            width: 80%;\n            margin: 10px auto;\n            margin-bottom: 20px;\n            border-radius: 10px;\n            height: 50px;\n            box-shadow: 4px 4px 10px rgba(68,157,209,0.4);\n            p{\n                color: #fff;\n                font-weight: bold;\n                font-size: 1.1em;\n                letter-spacing: 0.5ch;      \n            }  \n            cursor: pointer;\n            transition: 0.3s ease;\n        }\n        button:focus{\n            outline: none;\n        }\n        button:hover{\n            background: #55a2cf;\n            box-shadow: 4px 4px 15px rgba(68,157,209,0.6);\n        }\n        a{\n            text-decoration: none;\n            color: #787878;\n            font-size: 0.9em;\n            margin: auto;\n            margin-bottom: 20px;\n        }\n    }\n    span{\n        display: flex;\n        align-content: space-between;\n        margin: 10px auto;\n        padding-top: 40px;\n        width: 80%;\n        \n        @media (max-width: 500px){\n            img{\n                width:30px;\n                \n            }\n            h1{\n                margin: auto 10px;\n                font-weight: normal;\n                color: #449DD1;\n                font-size: 10px;\n            }\n        \n        }\n        @media (max-width: 768px){\n            img{\n            width:40px;\n            }\n            h1{\n                margin: auto 10px;\n                font-weight: normal;\n                color: #449DD1;\n                font-size: 28px;\n            }\n        \n        }\n        @media (max-width: 900px){\n            img{\n            width:60px;\n            }\n            h1{\n                margin: auto 10px;\n                font-weight: normal;\n                color: #449DD1;\n                font-size: 32px;\n            }\n        \n        }\n        @media (min-width: 900px){\n            img{\n            width:100px;\n            }\n            h1{\n                margin: auto 10px;\n                font-weight: normal;\n                color: #449DD1;\n                font-size: 36px;\n            }\n        \n        }\n        img{\n            margin-left: auto;\n            padding: 15px;\n        }\n        h1{\n            margin-right: auto;\n            \n        }\n        \n        \n        \n    }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://dbb167727b22.ngrok.io'\n})\n\nexport default api;","import React,{useState,useEffect} from 'react';\n\nimport { Container,Content,Campo } from './styles';\nimport logo from '../../assets/images/logo.svg'\nimport api from '../../services/api'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Login({history}) {\n  const [username, setUsername] = useState('');\n  const [passwd, setPasswd] = useState('');\n  const [alertOpen, setAlertOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [erroMenssage, setErroMenssage] = useState('')\n\n  useEffect(()=>{\n    const token = localStorage.getItem('@token');\n    if(token){\n      history.push(`/`);\n    }\n  },[])\n\n  const onSingin = async()=>{\n    setLoading(true);\n    if(username===''){\n      setErroMenssage('Username inválido');\n      setAlertOpen(true);\n    }else if(passwd===''){\n      setErroMenssage('Senha inválida');\n      setAlertOpen(true);\n    }else{\n      setAlertOpen(false);\n      const api_response = await api.post('/user/login',{ username, passwd});\n      const {status, response} = api_response.data;\n      if(status===202){\n        localStorage.setItem('@token', response);\n        history.push(`/`);\n      }else{\n        setErroMenssage('Usuário ou senha inválidos');\n        setAlertOpen(true);\n      }\n    }\n    setLoading(false);\n  }\n\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAlertOpen(false);\n  };\n  return (\n    <Container >\n        <Content>\n              <span>\n                <img src={logo} alt=\"logo\"/>\n                <h1>Real Time Chat</h1>\n              </span>\n            <form>\n              <Campo>  \n                <input id=\"username\" placeholder=\" \" onChange={text=>setUsername(text.target.value)}/>\n                <label htmlFor=\"username\">Username</label>\n              </Campo>\n              <Campo>       \n                <input id=\"passwd\" type=\"password\"  placeholder=\" \" onChange={text=>setPasswd(text.target.value)}/>\n                <label htmlFor=\"passwd\"  >Senha</label>\n              </Campo>\n              <button type=\"button\" onClick={onSingin} >\n                {\n                  loading ? (\n                    <ScaleLoader\n                      height={25}\n                      color={\"#fff\"}\n                      loading\n                    />\n                  ):(\n                    <p>ENTRAR</p>\n                  )\n                }\n              </button>\n              <a href=\"cadastro\">Não tem conta? Cadastre-se</a>\n            </form>\n            \n        </Content>\n        <Snackbar open={alertOpen} autoHideDuration={6000} onClose={handleCloseAlert}>\n          <Alert onClose={handleCloseAlert} severity=\"error\">\n            {erroMenssage}\n          </Alert>\n        </Snackbar>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    width: 100%;\n    height: 100vh;\n    background-image: linear-gradient(to right, #449DD1 , #8EC4E3);\n    display: flex;\n`;\nexport const Campo = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 80%;\n    position: relative;\n    margin: 10px auto;\n    margin-bottom: 10px;\n    input{\n        \n        height: 50px;\n        padding-left: 10px;\n        border-radius: 5px;\n        border: 2px solid #D9D9D9;\n        font-size: 16px;\n        color:#1f1f1f;\n        \n    }\n    input:focus{\n        outline: none;\n        border: 2px solid #449DD1;\n\n    }\n    label{\n        font-size: 18px;\n        position: absolute;\n        top: 14px;\n        left: 10px;\n        color: #D9D9D9;\n        transition: .5s ease;\n    }\n    \n    input:not(:placeholder-shown) + label{\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        transform-origin: left bottom;\n        transform: translate(0,-0.8rem);\n        font-size: 0.8em;\n        color: #D9D9D9;\n    }\n    input:focus + label, \n    input:active + label{\n\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        transform-origin: left bottom;\n        transform: translate(0,-0.8rem);\n        font-size: 0.8em;\n        color: #449DD1;\n    }\n    \n    \n`;\n\nexport const Content = styled.div`\n    \n    max-width: 700px;\n    width: 40%;\n    min-width: 350px;\n    height: auto;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: #fff;\n    box-shadow: 4px 4px 10px rgba(255,255,255,0.25);\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    form{\n        display: flex;\n        flex-direction: column;\n        button{\n            border: none;\n            background: #449DD1;\n            width: 80%;\n            margin: 10px auto;\n            margin-bottom: 20px;\n            border-radius: 10px;\n            height: 50px;\n            box-shadow: 4px 4px 10px rgba(68,157,209,0.4);\n            p{\n                color: #fff;\n                font-weight: bold;\n                font-size: 1.1em;\n                letter-spacing: 0.5ch;      \n            }  \n            cursor: pointer;\n            transition: 0.3s ease;\n        }\n        button:focus{\n            outline: none;\n        }\n        button:hover{\n            background: #55a2cf;\n            box-shadow: 4px 4px 15px rgba(68,157,209,0.6);\n        }\n        a{\n            text-decoration: none;\n            color: #787878;\n            font-size: 0.9em;\n            margin: auto;\n            margin-bottom: 20px;\n        }\n    }\n    span{\n        display: flex;\n        align-content: space-between;\n        margin: 10px auto;\n        padding-top: 40px;\n        width: 80%;\n        \n        @media (max-width: 500px){\n            img{\n                width:30px;\n                \n            }\n            h1{\n                margin: auto 10px;\n                font-weight: normal;\n                color: #449DD1;\n                font-size: 10px;\n            }\n        \n        }\n        @media (max-width: 768px){\n            img{\n            width:40px;\n            }\n            h1{\n                margin: auto 10px;\n                font-weight: normal;\n                color: #449DD1;\n                font-size: 28px;\n            }\n        \n        }\n        @media (max-width: 900px){\n            img{\n            width:60px;\n            }\n            h1{\n                margin: auto 10px;\n                font-weight: normal;\n                color: #449DD1;\n                font-size: 32px;\n            }\n        \n        }\n        @media (min-width: 900px){\n            img{\n            width:100px;\n            }\n            h1{\n                margin: auto 10px;\n                font-weight: normal;\n                color: #449DD1;\n                font-size: 36px;\n            }\n        \n        }\n        img{\n            margin-left: auto;\n            padding: 15px;\n        }\n        h1{\n            margin-right: auto;\n            \n        }\n        \n        \n        \n    }\n`;\n","import React,{useState, useEffect} from 'react';\n\nimport { Container,Content,Campo } from './styles';\nimport logo from '../../assets/images/logo.svg'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport api from '../../services/api'\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nexport default function Cadastro({history}) {\n  const [username, setUsername] = useState('');\n  const [passwd, setPasswd] = useState('');\n  const [repeatPasswd, setRepeatPasswd] = useState('');\n  const [alertOpen, setAlertOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [erroMenssage, setErroMenssage] = useState('')\n\n  useEffect(()=>{\n    const token = localStorage.getItem('@token');\n    if(token){\n      history.push(`/`);\n    }\n  },[])\n\n  const onSingup = async()=>{\n    setLoading(true);\n    if(username===''){\n      setErroMenssage('Username inválido');\n      setAlertOpen(true);\n    }else if(passwd===''){\n      setErroMenssage('Senha inválida');\n      setAlertOpen(true);\n    }else if(passwd!== repeatPasswd){\n      setErroMenssage('As senhas são diferentes');\n      setAlertOpen(true);\n    }\n    else{\n      setAlertOpen(false);\n      const api_response = await api.post('/user/create',{ username, passwd});\n      const {status, response} = api_response.data;\n      if(status===201){\n        localStorage.setItem('@token', response);\n        history.push(`/`);\n      }else{\n        setErroMenssage(response);\n        setAlertOpen(true);\n      }\n    }\n    setLoading(false);\n  }\n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAlertOpen(false);\n  };\n  return (\n    <Container >\n        <Content>\n              <span>\n                <img src={logo} alt=\"logo\"/>\n                <h1>Real Time Chat</h1>\n              </span>\n            \n            <form >\n              <Campo>  \n                <input id=\"username\" placeholder=\" \" onChange={text=>setUsername(text.target.value)}/>\n                <label htmlFor=\"username\">Username</label>\n              </Campo>\n              \n              <Campo>       \n                <input id=\"passwd\" type=\"password\"  placeholder=\" \" onChange={text=>setPasswd(text.target.value)}/>\n                <label htmlFor=\"passwd\"  >Senha</label>\n              </Campo>\n              <Campo>       \n                <input id=\"reppasswd\" type=\"password\"  placeholder=\" \"onChange={text=>setRepeatPasswd(text.target.value)}/>\n                <label htmlFor=\"reppasswd\"  >Repita sua senha</label>\n              </Campo>\n              <button type=\"button\" onClick={onSingup}>\n                {\n                  loading ? (\n                    <ScaleLoader\n                      height={25}\n                      color={\"#fff\"}\n                      loading\n                    />\n                  ):(\n                    <p>CADASTRAR</p>\n                  )\n                }\n              </button>\n              <a href=\"login\">Já tem uma conta? Login</a>\n            </form>\n        </Content>\n        <Snackbar open={alertOpen} autoHideDuration={6000} onClose={handleCloseAlert}>\n          <Alert onClose={handleCloseAlert} severity=\"error\">\n            {erroMenssage}\n          </Alert>\n        </Snackbar>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  min-width: 660px;\n  height: 100vh;\n  background: #E8F3F9;\n  display: flex;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 30%;\n  min-width: 250px;\n  max-width: 320px;\n  height: 100vh;\n  background: #fff;\n  box-shadow: 4px 0px 5px rgba(0,0,0,.1);\n  display: flex;\n  flex-direction: column;\n  header{\n      display: flex;\n      background: #F9F9F9;\n      padding: 20px;\n      img.pp{\n          width: 80px;\n          height: 80px;\n          border-radius: 50px;\n      }\n      div#user{\n          display: flex;\n          flex-direction: column;\n          margin: auto 10px;\n          p{\n            padding-left: 8px;\n              color: #646464;\n              font-size: 1.2em;\n          }\n          span{\n            display: flex;\n            padding-left: 8px;\n            p.status{\n              padding-left: 2px;\n              color: #49F945;\n              font-size: 0.9em;\n            }\n            div#ball{\n              width: 10px;\n              height: 10px;\n              border-radius: 5px;\n              background: #49F945;\n              padding: 0;\n              margin: auto 0;\n              margin-right: 2px;\n            }\n          }\n          \n          \n      }\n      img.exit{\n        margin-top: auto;\n        margin-left: auto;\n        margin-right: 13px;\n        padding: 10px;\n        border-radius: 8px;\n        transition: 0.2s ease;\n        cursor: pointer;\n      }\n      img.exit:hover{\n        background: #e8e8e8;\n      }\n  }\n  section#contacts{\n    height: inherit;\n    overflow-y: scroll;\n    section#requests{\n      display: flex;\n      flex-direction: column;\n      section{\n        display: flex;\n        width: 100%;\n        background: #E9E9E9;\n        \n        div{\n          display: flex;\n          margin: auto;\n          padding: 15px;\n          img{\n            width: 20px;\n            margin-right: 5px;\n          }\n          p{\n            color: #2F4247;\n          }\n          \n        }\n        \n      }\n\n    }\n  }\n  section#contacts::-webkit-scrollbar-track\n  {\n    border-radius: 10px;\n    background-color: #F5F5F5;\n  }\n  section#contacts::-webkit-scrollbar\n  {\n    width: 5px;\n    background-color: #F5F5F5;\n  }\n  section#contacts::-webkit-scrollbar-thumb\n  {\n    border-radius: 10px;\n    background-color: #449DD1;\n  }\n  section#add-contact{\n    display: flex;\n    \n    margin-top: auto;\n    width: 100%;\n    background: #FAFAFA;\n    div{\n      display: flex;\n      padding: 15px;\n      margin: 8px auto;\n      border-radius: 5px;\n      transition: .4s ease;\n      cursor: pointer;\n      \n      img{\n        width: 30px;\n      }\n      p{\n        color: #808080;\n        margin: auto 5px;\n      }\n    }\n    div:hover{\n      background: #e8e8e8;\n    }\n    a{\n      margin: auto;\n      padding: 10px;\n      border-radius: 5px;\n      transition: .3s ease;\n      cursor: pointer;\n    }\n    a:hover{\n      background: #e8e8e8;\n      \n    }\n    \n  }\n`;\n\nexport const UserRequest = styled.div`\n  display: flex;\n  padding: 15px;\n  border-bottom: 1px solid #cccccc;\n  img{\n    width: 50px;\n    height: 50px;\n    border-radius: 25px;\n  }\n  button{\n    border: 2px solid #73EC5F;\n    width: 50px;\n    height: 30px;\n    border-radius: 10px;\n    display: flex;\n    cursor: pointer;\n    transition: .3s ease;\n    img{\n      height: 80%;\n      transition: .3s ease;\n    }\n    background: #fff;\n    margin: auto 5px;\n    margin-left: auto;\n  }\n  button:focus{\n    outline: none;\n  }\n  button:hover{\n    border: 4px solid #73EC5F;\n    img{\n      height: 110%;\n    }\n  }\n  p{\n    margin: auto 5px;\n    color: #999999;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 70px;\n  display: flex;\n  padding: 15px;\n  border-bottom: 1px solid #f5f5f5;\n  transition: .3s ease;\n  cursor: pointer;\n  :hover{\n    background: #fafafa;\n  }\n  img{\n      height: 50px;\n      width: 50px;\n      border-radius: 25px;\n      margin: auto 0;\n  }\n  p{\n      margin: auto 0; \n      padding: 10px;\n      font-size: 0.9em;\n      font-weight: 400;\n      color: #999999;\n\n  }\n  span{\n      \n      margin: auto 0;\n      margin-left: auto;\n      display: flex;\n      p{\n        padding: 3px;\n      }\n      div{\n          width: 10px;\n          height: 10px;\n          border-radius: 10px;\n          margin: auto 0;\n      }\n  }\n  span.online{\n    p{\n      color: #49F945;\n    }\n    div{\n      background: #49F945;\n    }\n  }\n  span.offline{\n    p{\n      color: #f56f5b;\n    }\n    div{\n      background: #f56f5b;\n    }\n  }\n  \n`;\n","import React from 'react';\n\nimport { Container } from './styles';\n\nexport default function Contact({data}) {\n\n  return (\n    <Container>\n        <img src={data.profile_pic} alt=\"user pic\"/>\n        <p>{data.username}</p>\n        {\n          data.status ? (\n          <span className=\"online\">\n            <div></div>\n            <p>Online</p>\n          </span>\n          ): (\n            <span className=\"offline\">\n            <div></div>\n            <p>Offline</p>\n            </span>\n          )\n        }\n        \n    </Container>\n  );\n}\n","import React,{useEffect, useState} from 'react';\n\nimport { Container,UserRequest } from './styles';\nimport logout from '../../assets/icons/logout.svg';\nimport Contact from '../Contact';\nimport add_icon from '../../assets/icons/add_contact.svg';\nimport accept_icon from '../../assets/icons/accept.svg';\nimport api from '../../services/api';\n\nexport default function ContactsBar({onChangeChat, onAddContact, history, userData,showAlert}) {\n\n  const onLogout = ()=>{\n    localStorage.removeItem('@token');\n    history.push(`/`);\n  \n  }\n  const onAcceptRequest = async(id)=>{\n    const token = localStorage.getItem('@token');\n    const response_api = await api.get(`/friend/accept?target=${id}`,{ headers: { authorization: token } });\n    const {status, response} = response_api.data;\n    if(status===200){\n      showAlert('success','Pedido aceito com sucesso');\n    }else{\n      showAlert('error',response);\n    }\n  }\n  return (\n    <Container>\n        <header>\n            <img className=\"pp\" src={userData.avatar} alt=\"profile pic\"/>\n            <div id=\"user\">\n                <p>{userData.username}</p>\n                <span><div id=\"ball\"></div><p className=\"status\">Online</p></span>\n            </div>\n            \n            \n        </header>\n        <section id=\"contacts\">\n            {\n    \n              userData.friends.map((item)=>\n                <div onClick={()=> onChangeChat(item.id)} key={item.id} >\n                  <Contact data={item} />\n                </div>\n                \n              )\n            }\n            {\n              userData.friendsRequestRecived.length>0 ? (\n                <section id=\"requests\">\n                  <section>\n                    <div >\n                      <img src={add_icon} alt=\"icon\"/>\n                      <p>Solicitações de amizade</p>\n                    </div>   \n                  </section>\n                  {\n                    userData.friendsRequestRecived.map(item=>(\n                      <UserRequest key={item.id}>\n                        <img src={item.profile_pic} alt=\"icon\"/>\n                        <p>{item.username}</p>\n                        <button onClick={async ()=>await onAcceptRequest(item.id)}><img src={accept_icon} /></button>\n                      </UserRequest>\n                    ))\n                  }\n                  \n                  \n                </section>\n              ):<div></div>\n            }\n            \n        </section>\n        \n        <section id=\"add-contact\">\n          <div onClick={()=> onAddContact()} >\n            <img src={add_icon} alt=\"add contact\"/>\n            <p>Adicionar Contato</p>\n          </div>  \n          <a href=\"login\" onClick={onLogout}><img className=\"exit\" src={logout} alt=\"logout\"/></a>\n        </section>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  header{\n    display: flex;\n    width: 100%;\n    background: #449DD1;\n    img{\n      width: 60px;\n      height: 60px;\n      border-radius: 30px;\n      margin: 10px;\n    }\n    div{\n      margin: auto 0;\n      p{\n        color: #fff;\n      }\n      span{\n        display: flex;\n        div{\n          width: 10px;\n          height: 10px;\n          border-radius: 5px;\n          margin: auto 3px;\n        }\n        p{\n          font-size: .9em;\n          margin: auto 0;\n        }\n      }\n      span.online{\n        div{\n          background:#49F945;\n        }\n        p{\n          color: #49F945;\n        }\n      }\n      span.offline{\n        div{\n          background:#f56f5b;\n        }\n        p{\n          color: #f56f5b;\n        }\n      }\n    }\n    \n  }\n  footer{\n    background: #fff;\n    width: 100%;\n    height: 80px;\n    display: flex;\n    div{\n      width: 95%;\n      margin: auto;\n      display: flex;\n      input{\n        width: 90%;\n        border: 2px solid #E6E6E6;\n        border-radius: 5px;\n        font-size: 1.1em;\n        padding: 6px;\n        margin: auto;\n        color: #333333;\n      }\n      input::placeholder{\n        color: #d1d1d1;\n      }\n      input:focus{\n        outline: none;\n      }\n      button{\n        border: 0;\n        background: #449DD1;\n        height: 55px;\n        width: 55px;\n        border-radius: 40px;\n        margin-left: -55px;\n        box-shadow: 4px 4px 8px rgba(68,157,209,.44);\n        img{\n          width: 45%;\n        }\n      }\n      button:hover{\n        background: #67a8cf;\n        box-shadow: 4px 4px 12px rgba(68,157,209,.7);\n        cursor: pointer;\n      }\n      button:focus{\n        outline: none;\n      }\n    }\n    \n  }\n`;\nexport const Content = styled.div`\n  height: inherit;\n  width: 100%;\n  overflow-y: scroll;\n  display: flex;\n  flex-direction: column;\n  ::-webkit-scrollbar-track\n  {\n    border-radius: 10px;\n    background-color: #F5F5F5;\n  }\n  ::-webkit-scrollbar\n  {\n    width: 5px;\n    background-color: #F5F5F5;\n  }\n  ::-webkit-scrollbar-thumb\n  {\n    border-radius: 10px;\n    background-color: #8EC4E3;\n  }\n  div.send{\n    \n    margin-right: 60px;\n    margin-bottom: 0;\n    margin-top: 10px;\n    margin-left: auto;\n    background: #BD9CE5;\n    max-width: 350px;\n    border-radius: 8px 8px 0 8px;\n    z-index: 5;\n    position: relative;\n    p{\n      padding: 8px;\n      color: #fff;\n      z-index: 5;\n    }\n  }\n  div.received{\n    \n    margin-left: 60px;\n    margin-bottom: 0;\n    margin-top: 10px;\n    margin-right: auto;\n    background: #B2D7EC;\n    max-width: 350px;\n    border-radius: 8px 8px 8px 0;\n    position: relative;\n    z-index: 5;\n    p{\n      padding: 8px;\n      color: #fff;\n      \n    }\n  }\n`;\n","import React,{useState,useEffect} from 'react';\n\nimport { Container,Content } from './styles';\nimport send from '../../assets/icons/send.svg';\nimport api from '../../services/api';\nimport io from 'socket.io-client';\n\nexport default function ChatRoom({chat}) {\n    const [name, setName] = useState('');\n    const [avatar, setAvatar] = useState('');\n    const [status, setStatus] = useState(true);\n    const [chatContent,setChatContent] = useState([]);\n    const [menssage,setMenssage] = useState('');\n    const [scrollRef, setScrollRef] = useState();\n\n    const registertoSocket = () => {\n        const token = localStorage.getItem('@token');\n        const socket = io('http://191.242.97.194:3333',{\n            query: {\n                token,\n            }\n        });\n        socket.on('menssage', newMenssage => {\n            setChatContent([...chatContent, newMenssage]);\n        })\n      }\n\n    useEffect(()=>{\n        if(chatContent.length>0){\n            scrollRef.scrollTop = scrollRef.scrollHeight;\n        }\n        \n    },[chatContent, scrollRef])\n    useEffect(()=>{\n        const token = localStorage.getItem('@token');\n        if(chat!==''){\n            const getProfile = async()=>{\n                const api_response = await api.get(`/user/${chat}`,{ headers: { authorization: token } });\n                const {status, response} = api_response.data;\n                setName(response.username);\n                setAvatar(response.avatar);     \n                setStatus(response.status);\n                \n            }\n            const getChat = async()=>{\n                const api_response = await api.get(`/menssages?receiverId=${chat}`,{ headers: { authorization: token } });\n                const {status, response} = api_response.data;\n                if(status===200){\n                    setChatContent(response);\n                }\n            }\n            \n            getProfile();\n            getChat();\n            if(chat!==''){\n                registertoSocket();\n            }\n            \n        }\n        \n    },[chat])\n    useEffect(()=>{\n        registertoSocket();\n    },[chatContent])\n    const onSendMenssage = async ()=>{\n        const token = localStorage.getItem('@token');\n        if(menssage!==''){\n            setMenssage('')\n            const api_response = await api.post(`/menssages/send`,\n            { \n                content: menssage,\n                receiverId: chat   \n            }, {headers: { authorization: token, 'content-type': 'application/json' }});\n\n            const {status,response} = api_response.data;\n            \n        }\n    }\n\n    return (\n        <Container>\n            {\n                name ? <>\n                    <header>\n                        <img  src={avatar} alt=\"contact pic\"/>\n                        <div>\n                            <p>{name}</p>\n                        <span className=\"online\"><div></div><p>Online</p></span>\n                        </div>\n                    </header>\n                    <Content ref={el=>setScrollRef(el)}>\n                        {\n                            chatContent.map((item,index)=>(\n                                item.receiver===chat ? \n                                <div className={item.sender===chat ? 'received':'send'} key={index}>\n                                    <p>{item.content}</p>\n                                </div>:\n                                <p></p>\n                            ))\n                        }\n                        \n                    </Content>\n                    <footer>\n                        <div>\n                            <input placeholder=\"Digite alguma coisa...\" \n                                value={menssage} \n                                onChange={text=>setMenssage(text.target.value)} \n                                onKeyDown={key=>{if(key.key==='Enter'){onSendMenssage()}}}\n                            />\n                            <button onClick={onSendMenssage} ><img src={send} alt=\"send\"/></button>\n                        </div>\n                        \n                    </footer>\n                </>: <div></div>\n            }\n            \n            \n        </Container>\n    );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  width: 100vw;\n  height: 100vh;\n  background: rgba(0,0,0,.6);\n  z-index: 10;\n  display: flex;\n  transition: .5s ease;\n  div{\n      position: absolute;\n      width: 100vw;\n      height: 100vh;\n      z-index: 1;\n  }\n  section{\n    z-index: 5;\n    background: #fff;\n    border-radius: 15px;\n    margin: auto;\n    padding: 15px;\n    display: flex;\n    flex-direction: column;\n    header{\n        display: flex;\n        p{\n            font-size: 1.6em;\n            margin: auto 4px;\n        }\n        margin: auto;\n        \n    }\n    input{\n        border-radius: 5px;\n        border: 2px solid #D9D9D9;\n        padding: 10px;\n        font-size: 1.1em;\n        margin: 30px;\n        width: 300px;\n    }\n    input:focus{\n        outline: none;\n    }\n    button{\n        width: 60px;\n        height: 60px;\n        border: 0;\n        border-radius: 30px;\n        background: #449DD1;\n        margin: auto;\n        margin-bottom: -40px;\n        cursor: pointer;\n        img{\n            width: 50%;\n        }\n    }\n    button:focus{\n        outline: none;\n    }\n    button:hover{\n        background: #67a8cf;\n    }\n  }\n`;\n","import React,{useState} from 'react';\n\nimport { Container } from './styles';\nimport add_contact from '../../assets/icons/add_contact_blue.svg'\nimport plus_icon from '../../assets/icons/plus .svg'\nimport api from '../../services/api'\n\nexport default function AddContactView({onCloseModal, show}) {\n  const token = localStorage.getItem('@token');\n  const [name, setName] = useState('');\n  const onClickReady = async()=>{\n    const response_api = await api.get(`/friend/send?target=${name}`,{ headers: { authorization: token } });\n    const {status, response} = response_api.data;\n    if(status===200){\n      onCloseModal(1,'Pedido enviado');\n    }else{\n      onCloseModal(2,response);\n    }\n  }\n  return (\n    <>\n      {\n        show ? (\n          <Container>\n              <div onClick={()=>onCloseModal(0,'')}>\n                \n              </div>\n              <section>\n                  <header>\n                      <img src={add_contact} alt=\"add contact\" />\n                      <p>Adicionar Contato</p>\n                  </header>\n                  <input placeholder=\"Username...\" onChange={text=>setName(text.target.value)} />\n                  <button onClick={onClickReady}><img src={plus_icon} alt=\"add\" /></button>\n                  \n              </section>\n          </Container>\n        ):(<div></div>)\n      }\n      \n    </>\n  );\n}\n","import React,{useState,useEffect} from 'react';\n\nimport { Container } from './styles';\nimport ContactsBar from '../../components/ContactsBar';\nimport ChatRoom from '../../components/ChatRoom';\nimport AddContactView from '../../components/AddContactView';\nimport api from '../../services/api'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Chat({history}) {\n  const [currentChat, setCurrentChat] = useState('');\n  const [addContact, setAddContact] = useState(false);\n  const [userData,setUserData] = useState();\n  const [alertOpen, setAlertOpen] = useState(false);\n  const [alertMenssage, setAlertMenssage] = useState('')\n  const [alertType,setAlertType] = useState('success')\n\n\n  \n  useEffect(()=>{\n    const token = localStorage.getItem('@token');\n    if(!token){\n      history.push(`/login`);\n    }\n    const getInfo = async()=>{\n      const api_response = await api.get('/user',{ headers: { authorization: token } });\n      const {status, response} = api_response.data;\n      if(status===200){\n        setUserData(response);\n      }\n    }\n    getInfo();\n  },[])\n  \n  const handleCloseAlert = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAlertOpen(false);\n  };\n  const showAlert = (type,menssage)=>{\n    setAlertType(type);\n    setAlertMenssage(menssage);\n    setAlertOpen(true);\n  }\n\n  const onCloseModal = (cod,menssage)=>{\n    if(cod===0){\n      setAddContact(false)\n    }\n    if(cod===1){\n      setAlertType('sucess')\n    }else{\n      setAlertType('error')\n    }\n    setAlertMenssage(menssage);\n    setAlertOpen(true);\n    setAddContact(false)\n\n  }\n  return (\n    <Container>\n      {\n        userData ? (\n          <> \n            <ContactsBar \n              showAlert={showAlert}\n              onChangeChat={(chat)=>setCurrentChat(chat)} \n              userData={userData} history={history} \n              onAddContact={()=>setAddContact(true)} />\n            <ChatRoom chat={currentChat} />\n            <AddContactView show={addContact} onCloseModal={onCloseModal}/>\n          </>\n        ): <div></div>\n      }\n      <Snackbar open={alertOpen} autoHideDuration={1000} onClose={handleCloseAlert}>\n          <Alert onClose={handleCloseAlert} severity={alertType}>\n            {alertMenssage}\n          </Alert>\n      </Snackbar>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes';\nimport './index.css';\n\nReactDOM.render(<Routes />, document.getElementById('root'));","import React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Login from './pages/Login'\nimport Cadastro from './pages/Cadastro'\nimport Chat from './pages/Chat'\nexport default function Routes() {\n  return (\n    <BrowserRouter basename=\"https://cabraljv.github.io/realtimechat/\">\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/cadastro\" component={Cadastro} />\n      <Route path=\"/\" exact component={Chat} />\n    </BrowserRouter>\n  )\n}","module.exports = __webpack_public_path__ + \"static/media/logo.26c74108.svg\";","module.exports = __webpack_public_path__ + \"static/media/add_contact.08fce901.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.98669d69.svg\";","module.exports = __webpack_public_path__ + \"static/media/accept.e0655dee.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.5263b13e.svg\";","module.exports = __webpack_public_path__ + \"static/media/add_contact_blue.c779daaf.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus .e0a407f5.svg\";"],"sourceRoot":""}